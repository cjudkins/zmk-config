#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layers
#define BASE    0
#define NAV     1
#define NUM     2
#define SYM     3
#define ADJUST  4
#define SYS     5

// Tuning
#define TAPPING_TERM_MS 200
#define COMBO_TIMEOUT_MS 50
#define STICKY_TIMEOUT_MS 2000

// Shorthands
#define TAB_L LS(LC(TAB))     // Switch tab left
#define TAB_R LC(TAB)         // Switch tab right
#define BACK LG(LBRC)         // Go Back in history
#define FWRD LG(RBRC)         // Go Forward in history
#define FQUIT LG(LA(ESC))     // Force Quit/Task Manager
#define EXPOSE LC(UP)
#define EMOJI LC(LG(SPACE))
#define MEH LA(LC(LEFT_SHIFT))

&sk {
    release-after-ms = <STICKY_TIMEOUT_MS>;
    quick-release;
};

&sl {
    release-after-ms = <STICKY_TIMEOUT_MS>;
};

&lt {
    tapping-term-ms = <120>;
    quick-tap-ms = <200>;
};

&soft_off {
    hold-time-ms = <2000>;
};

/ {
    behaviors {
        morph_period: morph_period {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_comma: morph_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_qmark: morph_qmark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_lpar: morph_lpar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp LESS_THAN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_rpar: morph_rpar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp GREATER_THAN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_lbkt: morph_lbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LEFT_BRACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_rbkt: morph_rbkt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morph_shift_caps: morph_shift_caps {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;
            mods = <(MOD_LSFT)>;
        };

        tri_app_swap: tri_app_swap {
            compatible = "zmk,behavior-tri-state";
            label = "App Swapper";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
        };
        
        tri_win_swap: tri_win_swap {
            compatible = "zmk,behavior-tri-state";
            label = "Window Swapper";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp GRAVE>, <&kt LGUI>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV NUM>;
            then-layer = <ADJUST>;
        };

        quad_layer {
            if-layers = <NAV SYM>;
            then-layer = <SYS>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            timeout-ms = <COMBO_TIMEOUT_MS>;
        };

        combo_lpar {
            bindings = <&morph_lpar>;
            key-positions = <20 21>;
            timeout-ms = <COMBO_TIMEOUT_MS>;
        };

        combo_rpar {
            bindings = <&morph_rpar>;
            key-positions = <29 28>;
            timeout-ms = <COMBO_TIMEOUT_MS>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            display-name = "Base";
            bindings = <
                &kp Q   &kp W   &kp F   &kp P   &kp B       &kp J   &kp L   &kp U   &kp Y   &kp APOS
                &kp A   &kp R   &kp S   &kp T   &kp G       &kp M   &kp N   &kp E   &kp I   &kp O
                &kp Z   &kp X   &kp C   &kp D   &kp V       &kp K   &kp H   &morph_comma    &morph_period   &morph_qmark
                                &sl NAV   &morph_shift_caps      &lt SYM SPACE  &sl NUM
            >;
        };

        nav_layer {
            display-name = "Navigation";
            bindings = <
                &kp ESC &kp LG(X) &kp LG(C)    &kp LG(V)   &kp LG(Z)           &trans &kp TAB_L  &kp LG(SPACE) &kp LC(UP) &kp TAB_R
                &sk LCTRL   &sk LALT    &sk LSHFT  &sk LGUI &sk MEH            &tri_app_swap &kp LEFT &kp DOWN &kp UP &kp RIGHT
                &sk GLOBE   &trans  &trans  &trans  &trans                     &tri_win_swap &kp BACK &mt END PG_DN &mt HOME PG_UP &kp FWRD
                                                          &trans &trans        &trans &trans
            >;
        };

        num_layer {
            display-name = "Number";
            bindings = <
                &kp PLUS   &kp N1  &kp N2  &kp N3  &kp ASTRK                    &trans  &trans   &trans   &trans   &trans
                &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH                    &sk MEH   &sk RGUI  &sk RSHFT &sk LALT &sk RCTRL
                &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp N0                       &trans  &trans  &trans  &trans  &sk GLOBE
                                                &trans  &trans                  &trans  &trans
            >;
        };
        
        symbol_layer {
            display-name = "Symbol";
            bindings = <
                &kp GRAVE   &kp UNDER   &kp PIPE    &kp MINUS   &kp TILDE       &trans  &kp HASH  &kp DLLR  &kp PRCNT  &trans
                &kp GT   &kp LBRC    &kp LBKT    &kp LPAR    &kp SLASH          &sk MEH &sk RGUI &sk RSHFT  &sk LALT  &sk RCTL
                &kp LT   &kp RBRC    &kp RBKT    &kp RPAR    &kp BSLH           &trans  &kp CARET  &kp AT   &kp AMPS  &sk GLOBE
                                                &trans  &trans                  &trans  &trans
            >;
        };
        
        adjust_layer {
            display-name = "Adjust";
            bindings = <
                &kp C_VOL_DN  &kp C_PREV  &kp C_NEXT  &kp C_VOL_UP &kp C_PP &kp PAUSE_BREAK  &kp CAPS   &trans  &trans    &kp INS
                &sk LCTRL   &sk LALT    &sk LSHFT  &sk LGUI &sk MEH         &kp ESC  &kp RET   &kp BSPC &kp TAB &kp DEL
                &sk GLOBE  &kp C_AL_LOCK  &kp FQUIT  &kp EMOJI  &trans                   &kp PSCRN  &kp LS(RET)  &kp LA(BSPC) &kp LS(TAB)  &kp LA(DEL)
                                                &trans  &trans              &trans  &trans
            >;
        };

        sys_layer {
            display-name = "System";
            bindings = <
                &kp F12 &kp F1  &kp F2  &kp F3  &bootloader                           &bootloader  &trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_CLR  
                &kp F11 &kp F4  &kp F5  &kp F6  &soft_off                     &sk MEH  &sk RGUI  &sk RSHFT  &sk LALT  &sk RCTRL               
                &kp F10 &kp F7  &kp F8  &kp F9  &trans                  &trans &trans &trans &trans &sk GLOBE                           
                                                    &trans   &trans             &trans  &trans
            >;
        };

        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };
    };
};
